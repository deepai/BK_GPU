{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"star",
				"start_offset"
			],
			[
				"curr",
				"currval"
			],
			[
				"cur",
				"currval"
			],
			[
				"end",
				"end_offset"
			],
			[
				"currX",
				"currXSize"
			],
			[
				"nei",
				"NeighbourGraph"
			],
			[
				"co",
				"countNodes"
			],
			[
				"as",
				"assign(size_type __n, const bool &__x)	void "
			],
			[
				"unorder",
				"unordered_set"
			],
			[
				"uno",
				"unordered_map"
			],
			[
				"unord",
				"unordered_set"
			],
			[
				"isd",
				"isdiff2Used	bool "
			],
			[
				"prin",
				"print_f(int n)	void "
			],
			[
				"bit",
				"bits/"
			],
			[
				"r",
				"rleft	int "
			],
			[
				"ad",
				"append(size_type __n, char __c)	std::basic_string<char> & "
			],
			[
				"bits",
				"bits/"
			],
			[
				"std",
				"stdc++.h"
			],
			[
				"prio",
				"PRIo16	"
			],
			[
				"vec",
				"operator+(const valarray<typename _Dom::value_type> &__v, const _Expr<_Dom, typename _Dom::value_type> &__e)	_Expr<_BinClos<std::__plus, _ValArray, _Expr, typename _Dom::value_type, _Dom>, typename __fun<__plus, typename _Dom::value_type>::result_type> "
			],
			[
				"firs",
				"firstwidth"
			],
			[
				"per",
				"perm"
			],
			[
				"fir",
				"firstwidth"
			],
			[
				"next",
				"nextArr"
			],
			[
				"nex",
				"nextArr"
			],
			[
				"ori",
				"original"
			],
			[
				"or",
				"original"
			],
			[
				"max",
				"maxV"
			],
			[
				"get",
				"getcc"
			],
			[
				"cont",
				"concatenate"
			],
			[
				"opp",
				"opposed"
			],
			[
				"In",
				"Input"
			],
			[
				"tem",
				"temp2"
			],
			[
				"va",
				"val"
			],
			[
				"cu",
				"curr_B"
			],
			[
				"val",
				"val_B"
			],
			[
				"curr_",
				"curr_O"
			],
			[
				"val_",
				"val_O"
			],
			[
				"pri",
				"primes"
			],
			[
				"pr",
				"primes"
			],
			[
				"first",
				"firstelement"
			],
			[
				"sus",
				"subsetsums"
			],
			[
				"ss",
				"ssums"
			],
			[
				"pow",
				"powN"
			],
			[
				"kern",
				"kernels"
			],
			[
				"data",
				"dataOffset"
			],
			[
				"loc",
				"localCliqueId"
			],
			[
				"lo",
				"localCliqueId"
			],
			[
				"adj",
				"adjMatrix"
			],
			[
				"dista",
				"distance	(dijkstra.cpp)"
			],
			[
				"f",
				"found"
			],
			[
				"count",
				"countMinFreq"
			],
			[
				"coun",
				"countDivisor"
			],
			[
				"COu",
				"countMinFreq"
			],
			[
				"cou",
				"countMinFreq=N"
			],
			[
				"iis",
				"isPossible"
			],
			[
				"to",
				"totcount"
			],
			[
				"Fa",
				"FAST_IO"
			],
			[
				"pos",
				"position"
			],
			[
				"up",
				"upos"
			],
			[
				"bsear",
				"bsearchg"
			],
			[
				"print",
				"print_f"
			],
			[
				"new",
				"newNum"
			],
			[
				"fx",
				"fx[4][2"
			],
			[
				"bo",
				"bounds_4"
			],
			[
				"temp",
				"temp2"
			],
			[
				"te",
				"temp2"
			],
			[
				"arr",
				"arr2"
			],
			[
				"Grap",
				"GraphEdges"
			],
			[
				"ed",
				"Edges"
			],
			[
				"graph",
				"GraphEdges"
			],
			[
				"M",
				"MAXN"
			],
			[
				"Ma",
				"MAXN"
			],
			[
				"Cliq",
				"CliqueId"
			],
			[
				"Cl",
				"Cliques_size"
			],
			[
				"thread",
				"threadIdx"
			],
			[
				"_",
				"__syncthreads"
			],
			[
				"current",
				"currentVal"
			],
			[
				"__",
				"__syncthreads"
			],
			[
				"tid",
				"tid"
			],
			[
				"is",
				"isPVertexANeighbourOfCurrentVal"
			],
			[
				"PVer",
				"PVertex"
			],
			[
				"Cli",
				"CliqueId"
			],
			[
				"adja",
				"adjacentListPosOffset"
			],
			[
				"curre",
				"currentVal"
			],
			[
				"neig",
				"neighbours"
			],
			[
				"Nei",
				"neighbourIter"
			],
			[
				"ne",
				"neighbourIter"
			],
			[
				"Inpu",
				"InputGraph"
			],
			[
				"GP",
				"GPUCSR	(GPUCSR.h)"
			],
			[
				"suf",
				"suffixSort"
			],
			[
				"Co",
				"CountingArray"
			],
			[
				"Max",
				"MaxLg"
			],
			[
				"update",
				"updateVal"
			],
			[
				"PVe",
				"PVertexStartOffset"
			],
			[
				"pVer",
				"PVertexlength"
			],
			[
				"pver",
				"PVertexStartOffset"
			],
			[
				"h",
				"high"
			],
			[
				"pus",
				"push"
			],
			[
				"end_t",
				"end_time"
			],
			[
				"range",
				"range_x"
			],
			[
				"nu",
				"num_single_elements"
			],
			[
				"rang",
				"range_x"
			],
			[
				"bsar",
				"bsearchlast"
			],
			[
				"start",
				"start_time=g"
			],
			[
				"ver",
				"vertex_h"
			],
			[
				"size",
				"size"
			],
			[
				"src",
				"src_pair"
			],
			[
				"sr",
				"src_pair"
			],
			[
				"out",
				"outTime"
			],
			[
				"F",
				"FAST_IO"
			],
			[
				"be",
				"bellManFord"
			],
			[
				"cyc",
				"cycle_detected"
			],
			[
				"pre",
				"prebit"
			],
			[
				"clo",
				"clock"
			],
			[
				"cloc",
				"clock_t"
			],
			[
				"DFS",
				"DFS_Visit_normal"
			],
			[
				"Df",
				"DFS_Visit"
			],
			[
				"dfs",
				"DFS_Visit"
			],
			[
				"fi",
				"fillStack"
			],
			[
				"tr",
				"true"
			],
			[
				"num",
				"num_iterations"
			],
			[
				"all",
				"allZero"
			],
			[
				"sec",
				"secondAns"
			],
			[
				"fu",
				"fullRange"
			],
			[
				"n",
				"num"
			],
			[
				"fa",
				"FAST_IO"
			],
			[
				"con",
				"continue"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/Host/BKInstance.cu",
			"settings":
			{
				"buffer_size": 6636,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Device/RecursionStack.h",
			"settings":
			{
				"buffer_size": 677,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Device/GPUStack.h",
			"settings":
			{
				"buffer_size": 1959,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/kernels/kernels.cuh",
			"settings":
			{
				"buffer_size": 1079,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include \"../Device/NeighbourGraph.h\"\n#include \"../Device/GPUStack.h\"\n#include \"../Device/GPUCSR.h\"\n#include \"kernels.cuh\"\n\n__device__\nvoid swap(int &pos1, int &pos2) {\n	pos1 = pos1 ^ pos2;\n	pos2 = pos1 ^ pos2;\n	pos1 = pos1 ^ pos2;\n}\n\n__device__\nbool bsearch(int low, int high, int *array, int val) {\n	int mid;\n	while (low <= high) {\n		mid = low + (high - low) / 2;\n		if (array[mid] == val)\n			return true;\n		else if (val < array[mid])\n			high = mid - 1;\n		else\n			low = mid + 1;\n	}\n	return false;\n}\n\n/**\n * This Kernel will choose the pivot element. The pivot element has the highest neighbours in P.\n *\n * @param Cliqes_per_block //Number of Cliques per block\n * @param Cliques_size //Size of each Clique in terms of multiple of 32\n * @param Neighbour_size // neighbour size(Max size of Clique)\n * @param g // Neighbour Graph\n * @param stack //The DFS stack used to simulate recursion\n * @param InputGraph //Contains the CSR format of Input Graph\n */__global__\nvoid Kernel_ChoosePivot(int Cliqes_per_block, int Cliques_size,\n		int Neighbour_size, BK_GPU::NeighbourGraph &graph,\n		BK_GPU::GPU_Stack **stack, BK_GPU::GPU_CSR &InputGraph) {\n\n\n	}\n\nextern \"C\" int GpuPivotSelect(BK_GPU::NeighbourGraph &graph,\n		BK_GPU::GPU_Stack **stack, BK_GPU::GPU_CSR &InputGraph) {\n\n\n	return 0;\n}\n",
			"file": "src/kernels/KernelChoosePivot.cu",
			"file_size": 1282,
			"file_write_time": 130894509322820439,
			"settings":
			{
				"buffer_size": 1282,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++11/C++11.sublime-build",
					""
				],
				[
					"Packages/C++11/C++11.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/CUDA C++/cuda-c++.sublime-build",
					""
				],
				[
					"Packages/CUDA C++/cuda-c++.sublime-build",
					"Run"
				]
			],
			[
				"Packages/CUDA C++/cuda-c++.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/cpp11.sublime-build",
					""
				],
				[
					"Packages/User/cpp11.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/cpp11.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 354.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: For Loop"
			],
			[
				"prv",
				"PackageResourceViewer: Open Resource"
			],
			[
				"Snippet: c",
				"Snippet: cpp"
			],
			[
				"Package Control: In",
				"Package Control: Install Package"
			]
		],
		"width": 431.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID",
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID/src",
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID/src/Device",
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID/src/kernels"
	],
	"file_history":
	[
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID/src/kernels/kernels.cuh",
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID/src/kernels/KernelRearrangeX.cu",
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID/src/Main.cu",
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID/src/kernels/KernelRearrangeP.cu",
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID/src/kernels/KernelRearrange.cu",
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID/BK_GPU_HYBRID.sublime-project",
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID/src/Host/CsrGraph.cu",
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID/Debug/src/Device/GPUStack.d",
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID/Debug/makefile",
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID/Debug/src/Device/subdir.mk",
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID/Debug/src/subdir.mk",
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID/src/BK_GPU_HYBRID.sublime-project",
		"/home/debarshi/git/BK_GPU_HYBRID/BK_GPU_HYBRID/Debug/execute.sh",
		"/home/debarshi/Documents/Thesis Work/work/Converter.cpp",
		"/home/debarshi/.config/sublime-text-3/Packages/User/cpp11.sublime-build",
		"/home/debarshi/Documents/Programming/HackerRank/temp.cpp",
		"/home/debarshi/Documents/Programming/HackerRank/Rust_Murder.cpp",
		"/home/debarshi/Documents/Programming/HackerRank/QuickSort",
		"/home/debarshi/cuda-workspace/BK_GPU/src/Device/StackElement.h",
		"/home/debarshi/cuda-workspace/BK_GPU/src/Device/NeighbourGraph.cu",
		"/home/debarshi/Documents/Programming/LeetCode/output",
		"/home/debarshi/Documents/Programming/LeetCode/output.txt",
		"/home/debarshi/Documents/Programming/Codeforces/322/A.cpp",
		"/home/debarshi/Documents/Programming/Codeforces/322/E.cpp",
		"/home/debarshi/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/debarshi/.config/sublime-text-3/Packages/User/cpp.sublime-snippet",
		"/home/debarshi/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/debarshi/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/debarshi/Documents/Programming/Codeforces/322/B.cpp",
		"/home/debarshi/Documents/Programming/Codeforces/322/C.cpp",
		"/home/debarshi/Documents/Programming/Codejam/apac/A.cpp",
		"/home/debarshi/Documents/Programming/Codeforces/322/D.cpp",
		"/home/debarshi/.config/sublime-text-3/Packages/Clang Format/clang_format.sublime-settings",
		"/home/debarshi/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/debarshi/.config/sublime-text-3/Packages/C++/std-map-(map).sublime-snippet",
		"/home/debarshi/Documents/Programming/Codeforces/parse.py",
		"/home/debarshi/Documents/Programming/Codejam/2011/Bot_Trust.cpp",
		"/home/debarshi/Documents/Programming/Codejam/2011/MagicKa.cpp",
		"/home/debarshi/Documents/Programming/Codejam/2010/B.java",
		"/home/debarshi/Documents/Programming/Topcoder/ANUMLA.cpp",
		"/home/debarshi/cuda-workspace/BK_GPU/src/kernels/kernels.cuh",
		"/home/debarshi/cuda-workspace/BK_GPU/Debug/makefile",
		"/home/debarshi/cuda-workspace/BK_GPU/src/Main.cu",
		"/usr/include/c++/4.8/bits/stl_algo.h",
		"/home/debarshi/Documents/Programming/Apac/codejam.h",
		"/home/debarshi/Documents/Programming/Codejam/apac/C.cpp",
		"/home/debarshi/Documents/Programming/Codebook/String/Edit_distance.cpp",
		"/home/debarshi/Documents/Programming/Codebook/String/Suffix_array_emaxx.cpp",
		"/home/debarshi/Documents/Programming/Codebook/String/Distinct_Substrings.cpp",
		"/home/debarshi/Documents/Programming/Codebook/String/Input.txt",
		"/home/debarshi/Documents/Programming/Codebook/String/Minimum_LexicographicRotation.cpp",
		"/home/debarshi/Documents/Programming/Codebook/String/Suffix_array.cpp",
		"/home/debarshi/Documents/Programming/Codebook/Radix_Sort_Pair.cpp",
		"/home/debarshi/Documents/Programming/Codebook/Topological_Sorting.cpp",
		"/home/debarshi/Documents/Programming/Codebook/QuickSort.cpp",
		"/home/debarshi/Documents/Programming/Codebook/Sort/QuickSort.cpp",
		"/home/debarshi/Documents/Programming/Codebook/Sort/cpp",
		"/home/debarshi/Documents/Programming/Codebook/Maths/Scpp",
		"/home/debarshi/Documents/Programming/Codeforces/570/Bellman_Ford",
		"/home/debarshi/Documents/Programming/Codechef/Septemeber Long/sample_Case.cpp",
		"/home/debarshi/Documents/Programming/Codechef/Septemeber Long/sample_Case.txt",
		"/home/debarshi/Documents/Thesis Work/work/bcc_decomposition/bcc_decomposition.cpp",
		"/home/debarshi/Documents/Programming/Codebook/connected_components.cpp",
		"/home/debarshi/Documents/Thesis Work/work/quick-cliques/converter.cpp",
		"/home/debarshi/Documents/Thesis Work/work/quick-cliques/src/degeneracy_algorithm.c",
		"/home/debarshi/Documents/Programming/Codebook/Graphs/ford_fulkersion.cpp",
		"/home/debarshi/Documents/Programming/Codebook/Graphs/dijkstra",
		"/home/debarshi/Documents/Programming/Codebook/Graphs/dijkstra.cpp",
		"/home/debarshi/Documents/Programming/Apac/NumDiv.cpp",
		"/home/debarshi/Documents/Programming/Codejam/Codejam_Practise/A.cpp",
		"/home/debarshi/Documents/Programming/Codejam/Codejam_Practise/metro.cpp",
		"/home/debarshi/Documents/Programming/Codejam/Codejam_Practise/Calculator.cpp",
		"/home/debarshi/Documents/Programming/Codejam/Codejam_Practise/Tetris.cpp",
		"/home/debarshi/Documents/Programming/Codejam/Codejam_Practise/D.cpp",
		"/home/debarshi/Documents/Programming/Codejam/Codejam_Practise/B.cpp",
		"/home/debarshi/Documents/Programming/Codejam/Codejam_Practise/A-small-1.out",
		"/home/debarshi/Documents/Programming/Codejam/Codejam_Practise/C.cpp",
		"/home/debarshi/Documents/Programming/Codejam/Codejam_Practise/A-small-1-attempt1.in",
		"/home/debarshi/Documents/Programming/Codejam/Codejam_Practise/b.cpp",
		"/home/debarshi/Documents/Programming/Codejam/A.cpp",
		"/home/debarshi/Documents/Programming/Codejam/Chess",
		"/home/debarshi/Documents/Programming/Codejam/practise2.cpp",
		"/home/debarshi/.config/sublime-text-3/Packages/User/clang_format.sublime-settings",
		"/home/debarshi/.config/sublime-text-3/Packages/User/CppBuilder.sublime-settings",
		"/home/debarshi/Documents/Programming/Codejam/A-small-practice.in",
		"/home/debarshi/Documents/Programming/Codejam/A-small.out",
		"/home/debarshi/Documents/Programming/Codejam/401_palindromes.cpp",
		"/home/debarshi/Documents/Programming/Codejam/Chess.cpp",
		"/home/debarshi/Documents/Programming/Codejam/practise.cpp",
		"/home/debarshi/Documents/Programming/Codejam/Minesweeper.cpp"
	],
	"find":
	{
		"height": 70.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"12983",
			"26853",
			"12983",
			"26853",
			"cout",
			"gc",
			" ()",
			"gc",
			"distance",
			"parent",
			"t",
			"child",
			"a",
			"t = a[low]; a[low] = a[j]; a[j] = t;",
			"a",
			"inBound"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"dist",
			"distance",
			"A",
			"Bounds"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/Host/BKInstance.cu",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6636,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/CUDA C++/cuda-c++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4899.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/Device/RecursionStack.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 677,
						"regions":
						{
						},
						"selection":
						[
							[
								570,
								570
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 647.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/Device/GPUStack.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1959,
						"regions":
						{
						},
						"selection":
						[
							[
								1814,
								1814
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1104.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/kernels/kernels.cuh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1079,
						"regions":
						{
						},
						"selection":
						[
							[
								289,
								289
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/CUDA C++/cuda-c++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 207.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/kernels/KernelChoosePivot.cu",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1282,
						"regions":
						{
						},
						"selection":
						[
							[
								1140,
								1140
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/CUDA C++/cuda-c++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 46.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clangcomplete":
	{
		"height": 168.0
	},
	"output.exec":
	{
		"height": 180.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 102.0
	},
	"pinned_build_system": "compile",
	"project": "BK_GPU_HYBRID.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"dijks",
				"Graphs/dijkstra"
			],
			[
				"d",
				"D.cpp"
			],
			[
				"c",
				"C.cpp"
			],
			[
				"a",
				"A.cpp"
			],
			[
				"b",
				"B.cpp"
			],
			[
				"chess",
				"Chess"
			],
			[
				"a-small",
				"A-small.out"
			],
			[
				"a-",
				"A-small.out"
			],
			[
				"a-sm",
				"A-small.out"
			],
			[
				"a-sma",
				"A-small-practice.in"
			],
			[
				"ches",
				"Chess.cpp"
			],
			[
				"practise.cpp",
				"practise.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 240.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 378.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 216.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
